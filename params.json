{"name":"puredom.momentouch","tagline":"Simulated momentum for touch/mouse events in puredom.","body":"# Momentouch\r\n\r\nIntroduces `slidestart`, `slidestop`, and `sliding` events and simulates momentum of mouse/touch dragging on selected elements. It doesn't actually handle the movement of the nodes, but the `sliding` event gives you coordinates in the same way as a `mousemove` event, but will continue to fire these after the mouse button is released, reducing velocity over time.\r\n\r\n## Usage\r\n`puredom(selector).momentouch(options)`\r\nWhere selector is a valid puredom query selector, and options is an object with \r\n* `dragFactor`: a number between 0 and 1. The velocity components is multiplied by this each update.\r\n* `updateInterval`: number of milliseconds between `sliding` events and velocity updates once the mouse button is released.\r\n* `threshold`: the minimum x AND y velocity. Once both velocity components are below this threshold updates will stop and the `slidestop` event will fire.\r\n\r\n## Sample Usage\r\n```html\r\n<body>\r\n    <div class=\"ball\" id=\"foo\"></div>\r\n    <div class=\"ball\" id=\"bar\"></div>\r\n    <div class=\"ball\" id=\"baz\"></div>\r\n</body>\r\n```\r\n\r\n```javascript\r\npuredom('.ball')\r\n    .momentouch({dragFactor: 0.95})\r\n    .on('sliding', function(e) {\r\n        var ball = puredom(this),\r\n            x = ball.x() + e.deltaX,\r\n            y = ball.y() + e.deltaY;\r\n        \r\n        ball.position(Math.round(x), Math.round(y));\r\n    });\r\n```\r\n\r\nThat's it.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}